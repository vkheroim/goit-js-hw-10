{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Імпорт необхідних бібліотек\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Вибір елементів сторінки: календар, кнопка запуску\nconst calendarInput = document.querySelector('input#datetime-picker');\nconst startButton = document.querySelector('.start-btn');\n\n// Опції для Flatpickr календаря\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    handleDateSelect(selectedDates);\n  },\n};\n\n// Функція для вимкнення кнопки start\nfunction disableStartButton() {\n  startButton.disabled = true;\n}\n\n// Функція для увімкнення кнопки start\nfunction enableStartButton() {\n  startButton.disabled = false;\n}\n\n// Прослуховування події click на кнопці start\nstartButton.addEventListener('click', startTimer);\n\n// Ініціалізація Flatpickr з календарем та опціями\nlet selectedDate; // Змінна для зберігання вибраної дати\n\nflatpickr(calendarInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0]; // Збереження вибраної дати\n    handleDateSelect(selectedDate); // Виклик функції обробки вибору дати\n  },\n});\n\n// Функція для обробки вибору дати\nfunction handleDateSelect(selectedDate) {\n  if (selectedDate <= new Date()) {\n    disableStartButton();\n    displayErrorMessage('Error!');\n  } else {\n    enableStartButton();\n  }\n}\n\n// ID інтервалу для таймера\nlet intervalId;\n\n// --------------------------------------------------------\n\n// Функція для запуску таймера\nfunction startTimer() {\n  clearInterval(intervalId);\n  let currentDate = new Date();\n  let ms = selectedDate - currentDate;\n  updateTimerDisplay(ms);\n\n  intervalId = setInterval(() => {\n    updateTimerDisplay(ms);\n\n    if (ms <= 0) {\n      clearInterval(intervalId);\n      displaySuccessMessage('Success!');\n    }\n\n    ms -= 1000;\n  }, 1000);\n}\n\n//----------------------------------------------------------\n\n// Функція для відображення повідомлення про успіх\nfunction displaySuccessMessage(message) {\n  iziToast.success({\n    title: 'Час вийшов!',\n    message: message,\n  });\n}\n\n// Функція для відображення повідомлення про помилку\nfunction displayErrorMessage(message) {\n  iziToast.error({\n    title: 'Упс, щось пішло не так!',\n    message: message,\n  });\n}\n\n// Функція для конвертації мілісекунд у дні, години, хвилини та секунди\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функція для оновлення текстового вмісту елемента\nfunction updateElementText(selector, value) {\n  document.querySelector(selector).textContent =\n    value >= 0 ? addLeadingZero(value) : '00';\n}\n\n// Функція для оновлення відображення таймера\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  updateElementText('[data-days]', days);\n  updateElementText('[data-hours]', hours);\n  updateElementText('[data-minutes]', minutes);\n  updateElementText('[data-seconds]', seconds);\n}\n\n// Функція для додавання ведучого нуля до однозначних значень\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\n// Прослуховування події завантаження DOM\ndocument.addEventListener('DOMContentLoaded', () => {\n  disableStartButton();\n});\n"],"names":["calendarInput","startButton","disableStartButton","enableStartButton","startTimer","selectedDate","flatpickr","selectedDates","handleDateSelect","displayErrorMessage","intervalId","ms","updateTimerDisplay","displaySuccessMessage","message","iziToast","convertMs","days","hours","minutes","seconds","updateElementText","selector","value","addLeadingZero"],"mappings":"+IAOA,MAAMA,EAAgB,SAAS,cAAc,uBAAuB,EAC9DC,EAAc,SAAS,cAAc,YAAY,EAcvD,SAASC,GAAqB,CAC5BD,EAAY,SAAW,EACzB,CAGA,SAASE,GAAoB,CAC3BF,EAAY,SAAW,EACzB,CAGAA,EAAY,iBAAiB,QAASG,CAAU,EAGhD,IAAIC,EAEJC,EAAUN,EAAe,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAC9BC,EAAiBH,CAAY,CAC9B,CACH,CAAC,EAGD,SAASG,EAAiBH,EAAc,CAClCA,GAAgB,IAAI,MACtBH,IACAO,EAAoB,QAAQ,GAE5BN,GAEJ,CAGA,IAAIO,EAKJ,SAASN,GAAa,CACpB,cAAcM,CAAU,EAExB,IAAIC,EAAKN,EADS,IAAI,KAEtBO,EAAmBD,CAAE,EAErBD,EAAa,YAAY,IAAM,CAC7BE,EAAmBD,CAAE,EAEjBA,GAAM,IACR,cAAcD,CAAU,EACxBG,EAAsB,UAAU,GAGlCF,GAAM,GACP,EAAE,GAAI,CACT,CAKA,SAASE,EAAsBC,EAAS,CACtCC,EAAS,QAAQ,CACf,MAAO,cACP,QAASD,CACb,CAAG,CACH,CAGA,SAASL,EAAoBK,EAAS,CACpCC,EAAS,MAAM,CACb,MAAO,0BACP,QAASD,CACb,CAAG,CACH,CAGA,SAASE,EAAUL,EAAI,CAQrB,MAAMM,EAAO,KAAK,MAAMN,EAAK,KAAG,EAE1BO,EAAQ,KAAK,MAAOP,EAAK,MAAO,IAAI,EAEpCQ,EAAU,KAAK,MAAQR,EAAK,MAAO,KAAQ,GAAM,EAEjDS,EAAU,KAAK,MAAST,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAkBC,EAAUC,EAAO,CAC1C,SAAS,cAAcD,CAAQ,EAAE,YAC/BC,GAAS,EAAIC,EAAeD,CAAK,EAAI,IACzC,CAGA,SAASX,EAAmBD,EAAI,CAC9B,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYJ,EAAUL,CAAE,EACtDU,EAAkB,cAAeJ,CAAI,EACrCI,EAAkB,eAAgBH,CAAK,EACvCG,EAAkB,iBAAkBF,CAAO,EAC3CE,EAAkB,iBAAkBD,CAAO,CAC7C,CAGA,SAASI,EAAeD,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACpC,CAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDrB,GACF,CAAC"}